version: '3.8'

services:
  # PostgreSQL Database for Strapi CMS
  postgres:
    image: postgres:15-alpine
    container_name: fiftyfifty-postgres
    restart: unless-stopped
    env_file: ./strapi-cms/.env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME:-strapi}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-strapi}
      POSTGRES_DB: ${DATABASE_NAME:-strapi_fiftyfifty}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - fiftyfifty-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DATABASE_USERNAME:-strapi}']
      interval: 10s
      timeout: 5s
      retries: 5

  # Strapi CMS
  strapi:
    build:
      context: ./strapi-cms
      dockerfile: Dockerfile
    container_name: fiftyfifty-strapi
    restart: unless-stopped
    env_file: ./strapi-cms/.env
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: ${DATABASE_NAME:-strapi_fiftyfifty}
      DATABASE_USERNAME: ${DATABASE_USERNAME:-strapi}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-strapi}
      NODE_ENV: ${NODE_ENV:-development}
    volumes:
      - ./strapi-cms/config:/opt/app/config
      - ./strapi-cms/src:/opt/app/src
      - ./strapi-cms/public:/opt/app/public
      - strapi-uploads:/opt/app/public/uploads
    ports:
      - '1337:1337'
    networks:
      - fiftyfifty-network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres-data:
  strapi-uploads:

networks:
  fiftyfifty-network:
    driver: bridge

